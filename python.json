{
    "crud-routes": {
        "prefix": "crud-routes",
        "body": [
            "from flask import Blueprint, url_for, redirect, render_template, flash, request",
            "from sqlalchemy.exc import IntegrityError",
            "from ..models import $2",
            "from .froms import Add$2Form, Update$2Form",
            "",
            "$1s = Blueprint(\"$1s\", __name__)",
            "",
            "",
            "@$1s.route(\"/view_$1s\", methods=[\"GET\", \"POST\"])",
            "def view_$1s():",
            "    page = request.args.get(\"page\", 1, type=int)",
            "    $1s = $2.query.paginate(per_page=20, page=page)",
            "    return render_template(\"view_$1s.html\", page=page, $1s=$1s)",
            "",
            "",
            "@$1s.route(\"/$1/add\", methods=[\"GET\", \"POST\"])",
            "def add_$1():",
            "    form = Add$2Form()",
            "    if form.validate_on_submit():",
            "        new_$1 = $2(",
            "            $3=form.$3.data, $4=form.$4.data",
            "        )",
            "        db.session.add(new_$1)",
            "        db.session.commit()",
            "        flash(f\"$2 '{new_$1.$3}' added.\", category=\"success\")",
            "        return redirect(url_for(\"$1s.view_$1s\"))",
            "    return render_template(\"add_$1.html\", form=form)",
            "",
            "",
            "@$1s.route(\"/$1/<int:id>\", methods=[\"GET\", \"POST\"])",
            "def single_$1(id):",
            "    exp = $2.query.get_or_404(int(id))",
            "    return render_template(\"$1.html\", $1=exp)",
            "",
            "",
            "@$1s.route(\"/$1/<int:id>/update\", methods=[\"GET\", \"POST\"])",
            "def update_$1(id):",
            "    exp = $2.query.get_or_404(int(id))",
            "    form = Update$2Form()",
            "    if request.method == \"GET\":",
            "        form.$3.data = exp.$3",
            "        form.$4 = exp.$4",
            "    if form.validate_on_submit():",
            "        exp.$3 = form.$3.data",
            "        exp.$4 = form.$4.data",
            "        try:",
            "            db.session.add(exp)",
            "            db.session.commit()",
            "        except IntegrityError:",
            "            flash(",
            "                f\"An $1 with name '{exp.$3}' already exists.\",",
            "                category=\"danger\",",
            "            )",
            "            db.session.rollback()",
            "            return redirect(url_for(\"update_$1\"), id=id)",
            "        flash(f\"Sucesfully updataed $1 '{exp.exp_name}'\", category=\"success\")",
            "        return redirect(url_for(\"view_$1s\"))",
            "    return render_template(\"update_$1.html\", form=form)"
        ],
        "description": "crud-routes"
    }
}